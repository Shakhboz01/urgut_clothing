<%# do nor show provider if local entry %>
<%# removed service price %>
<div class='p-3' style='color: black; box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;'>
  <%= simple_form_for(product_entry) do |f| %>
    <%= f.error_notification %>
    <%= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>
    <%= f.association :delivery_from_counterparty, as: :hidden %>
    <%= f.input :amount_sold, as: :hidden %>
    <div class="form-inputs">
      <%= f.input :barcode, label: 'поиск по кодам:', input_html: {id: 'code-input', autofocus: 'true'} %>
      <%= f.association :pack, label: 'или выберите пачку:', collection: Pack.pluck(:name, :id, :code), include_blank: true, selected: params.dig(:pack_id).present? ? params.dig(:pack_id) : nil, input_html: { id: 'pack-select' } %>
      <%= link_to new_pack_path(delivery_id: params[:id]) do %>
        <div>не нашли? &#128070;</div><br>
      <% end %>
      <%= f.input :amount, label: 'количество:', id: 'inputs' %>
      <%= f.input :buy_price, label: 'Цена прихода (1 пачки) :', input_html: {id: 'product_entry_buy_price'} %>
      <%= f.input :sell_price, label: false, as: :hidden, input_html: {id: 'product_entry_sell_price'} %>
      <%= f.input :price_in_percentage, label: false, as: :hidden, input_html: {id: 'product_entry_price_in_percentage', value: defined?(price_in_percentage) ? price_in_percentage : 0} %>
      <%= f.button :submit, 'Создать', class: 'btn btn-warning' %>
    </div>
  <% end %>
</div>


<script>
  $(document).on('turbo:load', function() {
    $('form').on('keypress', e => {
      if (e.keyCode == 13) {
        return false;
      }
    });

    $("input").focus(function() {
      $(this).select();
    });

    var codeInput = document.getElementById('code-input');
    var packSelect = document.getElementById('pack-select');
    var h1Element = document.querySelector('#pack-name');

    packSelect.addEventListener('change', function() {
      // Update the content of the <h1> tag with the selected pack's text content
      var selectedPackOption = packSelect.options[packSelect.selectedIndex];
      var selectedPackText = selectedPackOption ? selectedPackOption.text : '';
      h1Element.textContent = selectedPackText;
    });
    // Event listener for code input change
    codeInput.addEventListener('input', function() {
      // Filter the pack options based on the code input value
      var codeValue = codeInput.value.trim().toLowerCase();

      // Make an AJAX request to the filtered_packs action
      $.ajax({
        url: '/packs/filtered_packs',
        method: 'GET',
        data: { code_value: codeValue },
        dataType: 'script',
        success: function() {
          // Update the content of the <h1> tag with the selected pack's text content
          var selectedPackOption = packSelect.options[packSelect.selectedIndex];
          var selectedPackText = selectedPackOption ? selectedPackOption.text : '';
          h1Element.textContent = selectedPackText;
        }
      });
    });
  });
</script>
